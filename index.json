[{"content":"前言 Hugo 是一个使用 Go 语言开发的静态网站生成器，可以将 Markdown 文档转换成完整的 HTML 网站，非常适合用来作为博客建站。\n本教程会展示完整的 Hugo 配置过程、配置 PaperMod 主题及主题汉化、主题自动更新，以及自动部署 GitHub Pages。\n搭建过程 安装 Hugo 我这边使用 Windows 作为演示，使用 Winget 来安装：\n1 winget install Hugo.Hugo.Extended 使用 hugo version 来验证安装，可以得到类似的输出，就是安装成功了：\n1 hugo v0.149.0-66240338f1b908ca3b163384c8229943e74eb290+extended windows/amd64 BuildDate=2025-08-27T15:37:16Z VendorInfo=gohugoio 创建网站 选取你的工作目录，以此执行下面的命令，将 YOUR_OWN_GIT_REPOSITORY 替换为你的远程仓库，需要将仓库名称设置为 \u0026lt;username\u0026gt;.github.io 并设置为公开：\n1 2 3 4 hugo new site blog cd blog git init hugo mod init YOUR_OWN_GIT_REPOSITORY 修改 hugo.toml 添加如下内容，来配置 PaperMod 主题：\n1 2 [[module.imports]] path = \u0026#34;github.com/adityatelange/hugo-PaperMod\u0026#34; 使用 hugo mod get -u 来获取或更新主题\n使用 hugo server 可以查看一下效果\nPaperMod 配置及汉化 创建 content/posts/_index.md 1 2 3 --- title: \u0026#34;文章\u0026#34; --- 创建 content/archives.md 1 2 3 4 5 6 --- title: \u0026#34;归档\u0026#34; layout: \u0026#34;archives\u0026#34; url: \u0026#34;/archives/\u0026#34; summary: archives --- 创建 content/search.md 1 2 3 4 5 --- title: \u0026#34;搜索\u0026#34; layout: \u0026#34;search\u0026#34; summary: \u0026#34;search\u0026#34; --- 创建 content/categories/_index.md 1 2 3 --- title: \u0026#34;分类\u0026#34; --- 创建 content/tags/_index.md 1 2 3 --- title: \u0026#34;标签\u0026#34; --- 可以参考一下我的 hugo.toml 配置，主要修改的就是标题、描述、关键词、作者、分类和标签页面的文本，开启封面图，我这边还禁用了 Hugo 自带的 Highlight，使用主题提供的高亮详细的配置项详见 PaperMod Variables：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 baseURL = \u0026#34;https://soldierrmb.github.io\u0026#34; languageCode = \u0026#34;zh-CN\u0026#34; title = \u0026#34;SoldierRMB\u0026#39;s Blog\u0026#34; enableRobotsTXT = true buildDrafts = false buildFuture = false buildExpired = false # Read: https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs#using-hugos-syntax-highlighter-chroma pygmentsUseClasses = true [[module.imports]] path = \u0026#34;github.com/adityatelange/hugo-PaperMod\u0026#34; [minify] disableXML = true minifyOutput = true [params] env = \u0026#34;production\u0026#34; # to enable google analytics, opengraph, twitter-cards and schema. title = \u0026#34;SoldierRMB\u0026#39;s Blog\u0026#34; description = \u0026#34;软妹币战士的个人博客 - 分享技术，也是分享热爱\u0026#34; keywords = [\u0026#34;软妹币战士\u0026#34;, \u0026#34;博客\u0026#34;, \u0026#34;Blog\u0026#34;, \u0026#34;Hugo\u0026#34;, \u0026#34;PaperMod\u0026#34;] author = \u0026#34;软妹币战士\u0026#34; # author = [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors images = [\u0026#34;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026#34;] DateFormat = \u0026#34;January 2, 2006\u0026#34; defaultTheme = \u0026#34;auto\u0026#34; # dark, light disableThemeToggle = false ShowReadingTime = true ShowShareButtons = false ShowPostNavLinks = true ShowBreadCrumbs = true ShowCodeCopyButtons = true ShowWordCount = true ShowRssButtonInSectionTermList = false UseHugoToc = true disableSpecial1stPost = false disableScrollToTop = false comments = false hidemeta = false hideSummary = false showtoc = true tocopen = false [params.assets] disableHLJS = true # to disable highlight.js # disableFingerprinting = true # favicon = \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; # favicon16x16 = \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; # favicon32x32 = \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; # apple_touch_icon = \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; # safari_pinned_tab = \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; [params.label] text = \u0026#34;SoldierRMB\u0026#39;s Blog\u0026#34; icon = \u0026#34;/apple-touch-icon.png\u0026#34; iconHeight = 35 # profile-mode [params.profileMode] enabled = false # needs to be explicitly set title = \u0026#34;SoldierRMB\u0026#39;s Blog\u0026#34; subtitle = \u0026#34;分享技术，也是分享热爱。\u0026#34; imageUrl = \u0026#34;\u0026lt;img location\u0026gt;\u0026#34; imageWidth = 120 imageHeight = 120 imageTitle = \u0026#34;my image\u0026#34; [[params.profileMode.buttons]] name = \u0026#34;Posts\u0026#34; url = \u0026#34;posts\u0026#34; [[params.profileMode.buttons]] name = \u0026#34;Tags\u0026#34; url = \u0026#34;tags\u0026#34; # home-info mode [params.homeInfoParams] Title = \u0026#34;🔥 技术与热爱同在\u0026#34; Content = \u0026#34;分享技术，也是分享热爱。\u0026#34; [[params.socialIcons]] name = \u0026#34;github\u0026#34; url = \u0026#34;https://github.com/SoldierRMB\u0026#34; [params.analytics.google] SiteVerificationTag = \u0026#34;SoldierRMB\u0026#39;s Blog\u0026#34; [params.analytics.bing] SiteVerificationTag = \u0026#34;SoldierRMB\u0026#39;s Blog\u0026#34; [params.analytics.yandex] SiteVerificationTag = \u0026#34;SoldierRMB\u0026#39;s Blog\u0026#34; [params.cover] hidden = true # hide everywhere but not in structured data hiddenInList = false # hide on list pages and home hiddenInSingle = false # hide on single page # [params.editPost] # URL = \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; # Text = \u0026#34;Suggest Changes\u0026#34; # edit text # appendFilePath = true # to append file path to Edit link # for search # https://fusejs.io/api/options.html [params.fuseOpts] isCaseSensitive = false shouldSort = true location = 0 distance = 1_000 threshold = 0.4 minMatchCharLength = 0 limit = 10 # refer: https://www.fusejs.io/api/methods.html#search keys = [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] [outputs] home = [ \u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34; ] [languages.zh] languageName = \u0026#34;中文\u0026#34; weight = 1 [[menu.main]] name = \u0026#34;归档\u0026#34; url = \u0026#34;/archives/\u0026#34; weight = 5 [[menu.main]] name = \u0026#34;搜索\u0026#34; url = \u0026#34;/search/\u0026#34; weight = 10 [[menu.main]] name = \u0026#34;分类\u0026#34; url = \u0026#34;/categories/\u0026#34; weight = 15 [[menu.main]] name = \u0026#34;标签\u0026#34; url = \u0026#34;/tags/\u0026#34; weight = 20 [markup.highlight] # noClasses = false # anchorLineNos = true codeFences = true guessSyntax = true lineNos = true style = \u0026#34;monokai\u0026#34; [markup.goldmark.renderer] unsafe = true 使用 GitHub 托管博客 我们需要在 GitHub 上创建一个新的 gh-pages 分支来保存 Hugo 生成的静态页面\n然后再将 Pages 部署为刚刚创建的 gh-pages 分支\n主题自动更新 创建一个 .github/workflows 目录，在这个目录中创建一个 update-theme.yml 文件，并将下面的内容粘贴进去，这样主题有更新的时候就会自动更新了：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 name: Update theme on: schedule: - cron: \u0026#34;0 0 * * *\u0026#34; workflow_dispatch: jobs: update-theme: runs-on: ubuntu-latest permissions: contents: write steps: - uses: actions/checkout@v5 - name: Setup Hugo uses: peaceiris/actions-hugo@v3 with: hugo-version: 0.149.0 extended: true - name: Update theme run: hugo mod get -u github.com/adityatelange/hugo-PaperMod - name: Tidy go.mod, go.sum run: hugo mod tidy - name: Commit changes uses: stefanzweifel/git-auto-commit-action@v6 with: commit_message: \u0026#34;ci: update theme\u0026#34; 部署 GitHub Pages 在 .github/workflows 目录下创建一个 deploy.yml 文件，并将下面的内容粘贴进去，repository-name 要修改为你自己的 \u0026lt;username\u0026gt;.github.io，分支名也要确认和你自 Pages 仓库的分支是否一致：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 name: Deploy Hugo to Public Site on: push: branches: [main] jobs: build-and-deploy: runs-on: ubuntu-latest permissions: contents: write pages: write id-token: write steps: - uses: actions/checkout@v5 with: fetch-depth: 0 - name: Cache Go modules uses: actions/cache@v4 with: path: | ~/.cache/go-build ~/go/pkg/mod key: ${{ runner.os }}-go-${{ hashFiles(\u0026#39;**/go.sum\u0026#39;) }} restore-keys: | ${{ runner.os }}-go- - name: Cache Hugo resources uses: actions/cache@v4 env: cache-name: cache-hugo-resources with: path: resources key: ${{ runner.os }}-hugo-resources-${{ env.cache-name }} restore-keys: | ${{ runner.os }}-hugo-resources-${{ env.cache-name }} - uses: actions/setup-go@v6 with: go-version: \u0026#34;^1.25.1\u0026#34; - run: go version - name: Go Get Modules run: go mod tidy \u0026amp;\u0026amp; go mod download - name: Setup Hugo uses: peaceiris/actions-hugo@v3 with: hugo-version: \u0026#34;latest\u0026#34; extended: true - name: Build Hugo run: hugo --minify --gc - name: Deploy to GitHub Pages 🚀 uses: JamesIves/github-pages-deploy-action@v4 with: token: ${{ secrets.GITHUB_TOKEN }} branch: \u0026#34;gh-pages\u0026#34; folder: \u0026#34;public\u0026#34; clean: true force: true 验证效果 将本地分支推送到远程后，会自动触发 GitHub Actions 部署到 GitHub Pages\n访问 https://\u0026lt;username\u0026gt;.github.io 就可以访问博客了\n","permalink":"https://soldierrmb.github.io/posts/hugo/","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003cp\u003eHugo 是一个使用 Go 语言开发的\u003cstrong\u003e静态网站生成器\u003c/strong\u003e，可以将 Markdown 文档转换成完整的 HTML 网站，非常适合用来作为博客建站。\u003c/p\u003e\n\u003cp\u003e本教程会展示完整的 Hugo 配置过程、配置 PaperMod 主题及主题汉化、主题自动更新，以及自动部署 GitHub Pages。\u003c/p\u003e\n\u003ch2 id=\"搭建过程\"\u003e搭建过程\u003c/h2\u003e\n\u003ch3 id=\"安装-hugo\"\u003e安装 Hugo\u003c/h3\u003e\n\u003cp\u003e我这边使用 Windows 作为演示，使用 Winget 来安装：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ewinget install Hugo.Hugo.Extended\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e使用 \u003ccode\u003ehugo version\u003c/code\u003e 来验证安装，可以得到类似的输出，就是安装成功了：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehugo v0.149.0-66240338f1b908ca3b163384c8229943e74eb290+extended windows/amd64 BuildDate=2025-08-27T15:37:16Z VendorInfo=gohugoio\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003ch3 id=\"创建网站\"\u003e创建网站\u003c/h3\u003e\n\u003cp\u003e选取你的工作目录，以此执行下面的命令，将 \u003ccode\u003eYOUR_OWN_GIT_REPOSITORY\u003c/code\u003e 替换为你的远程仓库，需要将仓库名称设置为 \u003ccode\u003e\u0026lt;username\u0026gt;.github.io\u003c/code\u003e 并设置为公开：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e4\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehugo new site blog\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecd blog\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit init\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehugo mod init YOUR_OWN_GIT_REPOSITORY\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e修改 \u003ccode\u003ehugo.toml\u003c/code\u003e 添加如下内容，来配置 PaperMod 主题：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e2\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e[[module.imports]]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003epath = \u0026#34;github.com/adityatelange/hugo-PaperMod\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e使用 \u003ccode\u003ehugo mod get -u\u003c/code\u003e 来获取或更新主题\u003c/p\u003e","title":"Hugo建站搭配PaperMod主题一站式教程"}]